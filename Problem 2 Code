Problem 2: - 
Consider a scenario of demand paged memory. Page table is held in registers. It takes 8 milliseconds to service a page fault if an empty page is available or the replaced page is not modified and 20 milliseconds if the replaced page is modified. Memory access time is 100 nanoseconds. Assume that the page to be replaced is modified 70 percent of the time. Generate a solution to find maximum acceptable page-fault rate for access time that is not more than 200 nanoseconds. 


Solution:- 

 

 

Time taken to service page Fault for empty page or unmodified page= 8ms Time taken to service page Fault for modified page = 20ms 

Memory Access Time:- 100ns Effective Access time = 200ns 

 

EAT = (1-p)(100) + (p) * (100 + (1-0.7) * (8msec) + (0.7)(20msec)) 

(Since 1 nsec = 1000000 msec ) 

= 100 -100p + 100p + (2.4*106 ) *p + (14*106 )*p 

 

 

200 = 100 + (16.4*106)*p p = 100/16.4*106 

 

 

#include  <stdio.h> 

#include  <stdlib.h> 

double  pfr(); 

void  ui(void); 

double  a; 

double  b; 

double  c; 

double  d; 

double  e; 

double  p; 

double  n; 

double  nm; 

double  f; 

void  main(){ 

int c; 

 

do{ 

 

printf("select  \n"); 

printf("1.rate\n"); 

printf("2.Exit"); 

scanf("%d",&c); 

switch(c){ 

case  1:ui();break; 


case  2:exit(0); 

} 

printf("\n\n"); 

}while(c<3); 

} 

void  ui(){ 

 

//at=acess  time  et=execution  time 

printf("enter  a"); 

scanf("%lf",&a); 

printf("enter  b  "); 

scanf("%lf",&b); 

printf("enter  c"); 

scanf("%lf",&c); 

printf("enter  time"); 

scanf("%lf",&d); 

printf("enter  e"); 

scanf("%lf",&e); 

n  =  (a*1000000); 

nm=  (b*1000000); 

f  =  (d/100); 

printf("  fault  cal  for:\n"); 

printf("spf=%lf  \n",n); 

printf("spf  %lf  \n",nm); 

printf("mat  %lf\n",c); 

printf("eat  %lf\n",e); 

p=    pfr(n,nm,c,f,e); 

printf("max  apf  =  %.2e",p); 

} 

double  pfr(double  a,double  b,double  mem,double  t,double  e){ 

double  assume,serve; 

double  nu,de; 

double  pageFault; 

assume  =  (1-  t)*a; 

serve  =  t*b; 

nu  =  e  -  mem; 

de  =  (assume+serve); 

pageFault  =  nu/de; 

return  pageFault; 

} 

 
